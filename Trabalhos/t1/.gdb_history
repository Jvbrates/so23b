c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
c
print self.runningP 
watch self.es_pendencias
watch self.es_pendencias[3][0] if self.runningP != 4
info br
rm br 3
rm br 2
d br 2
d br 3
run
i br
i w
i wat
watch self.es_pendencias if self.runningP != 4
r
print pend 
print aten 
print self.processTable.first.next.key 
print self.processTable.first.next
set $p = self.processTable.first.next.packet 
print (*((process *)$p)).PID
print (*((process_T *)$p)).PID
print (*((process_t *)$p)).PID
print (*((process_t *)$p)).processState 
exit
exit
tty /dev/pts/1
run
break so_trata_irq_err_cpu 
tty /dev/pts/1
run
print self.es_pendencias 
s
bt
s
printbt
bt
s
s
s
s
s
s
s
s
s
print err
s
s
s
print ((process_t *)self.processTable.first.next.packet ).processState 
print ((process_t *)self.processTable.first.next.next.packet ).processState 
s
s
s
s
s
s
up
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
info locals
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
s
print i
up
print i
print self.es_pendencias 
break if i == 3
c
print i
s
up
s
up
s
up
s
s
s
s
s
s
s
s
s
s
print self.es_pendencias[i][0]
print estado_escr
c
c
c
c
c
c
c
c
c
c
c
c
c
c
d 
info locals
watchpoint estado_escr
watch estado_escr 
c
c
bt
print pend
print aten
exit
tty /dev/pts/1
br so_trata_irq_err_cpu 
r
watch estado_escr 
c
rm b 1
d b 1
d br 1
c
exit
tty /dev/pts/1
run
bt
up
up
up
up
up
up
print self
print *self
exit
run
up
up
up
up
up
bt
up
print self.estado 
bt
jump console_tictac 
c
bt]
bt
run
exit
run 
print test
run
print test
exit
r
bt
up
up
up 
upup
up
up
up
print self.estado 
print self.cpu.PC
print self.cpu.modo
exit
break op_RETI
tty /dev/pts/2
run
c
c
c
c
d br
break op_RETI if self.modo == usuario
r
r
file main
ru
ru
exit
